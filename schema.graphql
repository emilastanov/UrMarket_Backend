schema {
    query: Query
    mutation: Mutation
}

type term {
    min: Int!
    max: Int!
}

type amount {
    min: Int!
    max: Int!
}

type processingTime {
    min: Int!
    max: Int!
}

type age {
    min: Int!
    max: Int!
}

type requirements {
    age: age
    income: Int!
    income_proof: Boolean!
    documents: [String!]
    ukrain_nationality: Boolean
    special: String
}

type Offer {
    id: ID!
    title: String!
    logotype: String!
    description: String!
    is_show: Boolean
    link: String!
    rate: Float!
    term: term
    amount: amount
    rating: Int!
    processing_time: processingTime
    processing_methods: [String!]
    requirements: requirements
}

type OfferResult {
    success: Boolean!
    errors: [String]
    offer: Offer
}

type OffersResult {
    success: Boolean!
    errors: [String]
    offers: [Offer]
}

type User {
    id: ID!
    name: String
    key: String!
    permission: String!
}

type UsersResult {
    success: Boolean!
    errors: [String]
    users: [User]
}

type UserResult {
    success: Boolean!
    errors: [String]
    user: User
}

type state {
    success: Boolean!
}

type Query {
    listOffers: OffersResult!
    getOffer(id: ID!): OfferResult!
    listUsers: UsersResult!
    getUser(id: ID!): UserResult!
}

type Mutation {
    addOffer(
        title: String!,
        description: String!,
        logotype: String!,
        link: String!,
        rate: Float!,
        amountMin: Int!,
        amountMax: Int!,
        termMin: Int!,
        termMax: Int!,
        rating: Int!,
        processingTimeMin: Int!,
        processingTimeMax: Int!,
        processingMethods: String!,
        requirementsAgeMin: Int!,
        requirementsAgeMax: Int!,
        requirementsIncome: Int,
        requirementsIncomeProof: Boolean!,
        requirementsDocuments: String!,
        requirementsUkrainNationality: Boolean!
        requirementsSpecial: String,
    ): OfferResult

    updateOffer(
        id: ID!,
        title: String,
        description: String,
        logotype: String,
        link: String,
        rate: Float,
        amountMin: Int,
        amountMax: Int,
        termMin: Int,
        termMax: Int,
        rating: Int,
        processingTimeMin: Int,
        processingTimeMax: Int,
        processingMethods: String,
        requirementsAgeMin: Int,
        requirementsAgeMax: Int,
        requirementsIncome: Int,
        requirementsIncomeProof: Boolean,
        requirementsDocuments: String,
        requirementsUkrainNationality: Boolean
        requirementsSpecial: String,
    ): OfferResult

    addUser(
        name: String,
        permission: String!
    ): UserResult

    removeUser(
        id: ID!
    ): state

    updateUser(
        id: ID!
        name: String!
    ): UserResult
}

